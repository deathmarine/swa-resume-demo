@page "/contact"

@inject ISnackbar Snackbar
@inject IAPIService FormSubmitService

@code {
	private bool success;
	private ContactModel contactFormModel = new();

	private async void OnValidSubmit(EditContext context) {
		Snackbar.Add("Message Sent!", Severity.Normal);
		await FormSubmitService.PostFormDataAsync(contactFormModel);
		contactFormModel = new();
		success = true;
		StateHasChanged();
	}
}

<Header Title="@nameof(Contact)" />
<MudContainer MaxWidth="MaxWidth.Small">
	<EditForm Model="@contactFormModel" OnValidSubmit="OnValidSubmit">
		<DataAnnotationsValidator />
		@if (!success) {
			<MudCard>
				<MudCardContent>
					<MudTextField Label="Full name" HelperText="Full Name"
						@bind-Value="contactFormModel.Name" For="@(() => contactFormModel.Name)" />
					<MudTextField Label="Email" Class="mt-3"
						@bind-Value="@contactFormModel.Email" For="@(() => @contactFormModel.Email)" />
					<MudTextField Label="Subject" HelperText="Reason for your message" Class="mt-3"
						@bind-Value="contactFormModel.Subject" For="@(() => contactFormModel.Subject)" />
					<MudTextField Label="Message" Class="mt-3" AutoGrow Lines="6"
						@bind-Value="contactFormModel.Message" For="@(() => contactFormModel.Message)" />
					</MudCardContent>
					<MudCardActions>
						<MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Submit</MudButton>
					</MudCardActions>
				</MudCard>
		} else {
			<MudCard>
				<MudCardContent>
					<MudText Typo="Typo.h6">Thank you for your message!</MudText>
					<MudText Typo="Typo.body1">I will get back to you as soon as possible.</MudText>
				</MudCardContent>
			</MudCard>
		}
	</EditForm>

</MudContainer>